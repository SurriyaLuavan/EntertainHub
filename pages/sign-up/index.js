import Head from "next/head";
import Link from "next/link";
import styles from "/styles/AuthPage.module.css";
import AuthLayout from "@/components/auth/AuthLayout";
import { useState } from "react";

export default function Signup() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [repeat, setRepeat] = useState("");
  const [valid, setValid] = useState({
    email: true,
    password: true,
    repeat: true,
  });

  function handleSubmit(e) {
    e.preventDefault();

    let currentStatus = {};

    Object.keys(valid).forEach((item) => {
      if (item === "") {
        currentStatus = { ...currentStatus, item: false };
      }
    });
  }

  return (
    <>
      <Head>
        <title>Sign-up | EntertainHub</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/assets/favicon.png" />
      </Head>

      <AuthLayout type="Sign Up" onSubmit={handleSubmit}>
        <div className={styles.inputFieldContainer}>
          <input
            type="email"
            name="email"
            id="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            onFocus={() => setValid({ email: true, password: true })}
            className={`${styles.inputField} | ${styles.fsInput} ${
              !valid && styles.errorField
            } bg-primary-600 text-neutral-100 fw-light`}
            placeholder="Email address"
          />
          {!valid.email && (
            <span
              className={` ${styles.errorMessage} ${styles.fsError} text-accent fw-light`}
            >
              Invalid email ID
            </span>
          )}
        </div>
        <div className={styles.inputFieldContainer}>
          <input
            type="password"
            name="password"
            id="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            onFocus={() => setValid({ email: true, password: true })}
            className={`${styles.inputField}  | ${styles.fsInput} ${
              !valid.password && styles.errorField
            } bg-primary-600 text-neutral-100 fw-light`}
            placeholder="Password"
          />
          {!valid.email && (
            <span
              className={` ${styles.errorMessage} ${styles.fsError} text-accent fw-light`}
            >
              Invalid email ID
            </span>
          )}
        </div>
        <div className={styles.inputFieldContainer}>
          <input
            type="password"
            name="password-repeat"
            id="password-repeat"
            value={repeat}
            onChange={(e) => setPassword(e.target.value)}
            onFocus={() => setValid({ email: true, password: true })}
            className={`${styles.inputField}  | ${styles.fsInput} ${
              !valid.password && styles.errorField
            } bg-primary-600 text-neutral-100 fw-light`}
            placeholder="Repeat password"
          />
          {!valid.email && (
            <span
              className={` ${styles.errorMessage} ${styles.fsError} text-accent fw-light`}
            >
              Invalid email ID
            </span>
          )}
        </div>
        <button
          type="submit"
          className={`${styles.submitButton} | ${styles.fsInput} fw-light`}
        >
          Create an account
        </button>
        <p className={`${styles.fsInput} ${styles.para} fw-light`}>
          Already have an account?{" "}
          <Link href="/login" className="text-accent">
            Login
          </Link>
        </p>
      </AuthLayout>
    </>
  );
}
